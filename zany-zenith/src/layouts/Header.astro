---
---

<header>
	<div class="header-container container">
		<a href="/" class="">e.</a>
		<div class="header__right" style="margin-left:auto;">
			<div class="dark--mode" style="margin-right:-10px;">
				<svg viewBox="-26.4 -26.4 100.80 100.80" id="b" xmlns="http://www.w3.org/2000/svg" fill="#000000" stroke="#000000" stroke-width="2.064" style="fill: white !important;" width="50px" height="50px"><g id="SVGRepo_bgCarrier" stroke-width="0" style="fill: white;"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round" style="fill: white;color: white !important;"></g><g id="SVGRepo_iconCarrier"><defs><style>.c{fill:none;stroke:#000000;stroke-linecap:round;stroke-linejoin:round;}</style></defs><path class="c" d="m32.8,29.3c-8.9-.8-16.2-7.8-17.5-16.6-.3-1.8-.3-3.7,0-5.4.2-1.4-1.4-2.3-2.5-1.6C6.3,9.7,2.1,16.9,2.5,25c.5,10.7,9,19.5,19.7,20.4,10.6.9,19.8-6,22.5-15.6.4-1.4-1-2.6-2.3-2-2.9,1.3-6.1,1.8-9.6,1.5Z" style="fill: white;"></path></g></svg>
			</div>
			<a href="/blog" style="margin-inline:1.5rem;">Blog</a>
			<a class="btn btn-primary-outline" href="/contact"
				><span>Get a quote</span></a
			>
		</div>
	</div>
</header>

<style>
	header {
		position: fixed;
		left: 0;
		top: 0;
		width: 100vw;
		z-index: 9999;
		transition: 300ms ease all;
	}
	.header-container {
		display: flex;
		padding-block: 1.5rem;
		align-items: center;
	}

	.header-container > a {
		font-size: 1.5rem;
	}
	.header--dark {
		background-color: black;
		transition: var(--transition-base);
	}
	.header--dark * {
		color: white !important;
	}
	.header__right{
		display: flex;
		justify-content: center;
		align-items: center;
		flex-direction: row;
	}
	svg {
		transform: rotate(270deg);
		transition: transform 400ms ease;
	}
	svg:hover {
		transform: rotate(0deg);
		cursor: pointer;
	}
/*
	@keyframes spin {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }
*/
	@media (max-width: 600px) {
		header {
			padding: 0 2rem;
		}
	}
</style>

<script is:inline >
	window.addEventListener("scroll", function () {
		let header = document.querySelector("header");
		let scroll = window.scrollY;
		if (scroll > 400) {
			header.classList.add("header--dark");
		} else {
			header.classList.remove("header--dark");
		}
	});


	    // Check and apply the theme from localStorage
			const theme = localStorage.getItem("theme");
  console.log(localStorage.getItem("theme"))
	// Function to toggle dark mode
	function darkMode() {
		document.documentElement.classList.toggle('dark');
		const isDark = document.documentElement.classList.contains('dark');
		// Store the current theme in localStorage
		localStorage.setItem('theme', isDark ? 'dark' : 'light');
	}

	// If the theme is 'dark', apply dark mode
	if (theme === 'dark') {
		document.documentElement.classList.add('dark');
	}

	// Add event listener for toggling dark mode
	const darker = document.querySelector('.dark--mode');
	if (darker) {
		darker.addEventListener('click', () => {
			darkMode();
		});
	}

	

</script>
